on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker images
        run: |
          docker-compose build
          docker images  # List images to verify if myapp is built

      - name: Save Docker image to a file
        run: |
          docker save myapp:latest -o myapp.tar || echo "Image 'myapp:latest' not found. Please check the build step."

      - name: Upload Docker image to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem myapp.tar ec2-user@18.206.155.178:/home/ec2-user/myapp.tar

      - name: Load and run Docker image on EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ec2-user@18.206.155.178 '
            docker load -i /home/ec2-user/myapp.tar &&
            docker stop myapp || true &&
            docker rm myapp || true &&
            docker run -d --name myapp --network my_network \
              -p 8080:8080 \
              -e DATABASE_HOST=myapp-db \
              -e DATABASE_PORT=5432 \
              -e DATABASE_USER=postgres \
              -e DATABASE_PASSWORD=swagimpoe123 \
              -e DATABASE_NAME=auth_db \
              myapp:latest
          '
